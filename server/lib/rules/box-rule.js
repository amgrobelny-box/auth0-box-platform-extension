module.exports = `/*
*  This rule been automatically generated by the auth0-box-platform extension on <%= updateTime() %>
*/
function(user, context, callback) {
  if (!(context.request.query && context.request.query.audience === 'urn:box-platform-api') &&
      !(context.request.body && context.request.body.audience === 'urn:box-platform-api')) {
    return callback(null, user, context);
  }

  user.app_metadata = user.app_metadata || {};

  if (user.app_metadata.box_appuser_id) {
    context.accessToken['http://box-platform/appuser/id'] = user.app_metadata.box_appuser_id;
    return callback(null, user, context);
  }

  var options = {
    headers: {
      'x-api-key': '<%= apiKey %>'
    },
    url: '<%= extensionUrl %>/api/provision',
    json: {
      user: user
    }
  };

  console.log('Creating a new Box App User...');
  request.post(options, function(err, res, body) {
    if (err) {
      console.log('Error creating Box App User:', err);
      return callback(err);
    }

    if (!body) {
      console.error('Box Error:', JSON.stringify({ statusCode: res.statusCode }, null, 2));
      return callback(new UnauthorizedError('Box Error: ' + res.statusCode));
    }

    if (res.statusCode !== 200) {
      return callback(new UnauthorizedError('Box Error: ' + (body.message || body.error_description || body.error || body)));
    }

    console.log('Box App User created:', res.body.id);
    return auth0.users.updateAppMetadata(user.user_id, { box_appuser_id: res.body.id }, function(err, updatedUser) {
      context.accessToken['http://box-platform/appuser/id'] = res.body.id;
      callback(null, updatedUser, context);
    });
  });
}`;
